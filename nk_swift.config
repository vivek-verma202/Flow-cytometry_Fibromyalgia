# GENERAL:
nClusters= 100 # Set number of clusters for first step (AUTO to assign cluster number by coarse clustering estimation)
ScatterColsAll=  # Channel numbers of scatter variables. AUTO=automatically determine all non-fluorescence dimensions (excluding TIME)
ScatterCols2Use=  # Scatter channels to use.  AUTO=automatically use only FSC-A and SSC-A
FluorColsAll= 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 # Channel numbers of Fluorescence variables.  AUTO=automatically determine all fluorescence dimensions
FluorCols2Use= 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 # Fluorescence channels to use. AUTO=automatically set equal to FluorColsAll
ArcSinhSclFactors= 878, 532, 150, 5000, 800, 150, 595, 500, 1000, 454, 388, 1000, 150, 427 # Scaling Factors for the arcsinh transformation. Same SIZE AND ORDER as ArcSinhCols
# If one ArcSinhSclFactor value is specified, it is applied to all ArcSinhCols
# OUTPUT:
FCS_Output= 0 # Output SWIFT.fcs file (0|1)
Fractional_Size_Output= 1 # Output fractional cluster sizes (0|1)
Stochastic_Size_Output= 0 # Output stochastic cluster sizes (0|1)
Geometric_Mean_Output= 0 # Output geometric means based on posterior probabilities along cluster dimensions (0|1)
Assignment_Template= 1 # Output new template during template assignment (0|1)
Recompute_Medians= 1 # Recompute medians during template assignment (0|1)
# DIRECTORIES:
name= swift.config # name of configuration file
path= ./config\ # path of configuration file
filepath= C:\Users\vverma3\Desktop\FM_flow_cytometry\NK\data\fcs\02_cleaned\02_cleaned_Reference_cct.fcs # path to current data file
# ADVANCED:
ConcatSize4SWIFT= 2000000 # Target number of events in consensus FCS file for SWIFT cluster template (SCT)
ConcatSize4Registration= 8000000 # Target number of events in consensus FCS file for registration cluster template (RCT)
ClusterColsAll= 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 # List of dimensions to include during output
ClusterCols2Use= 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 # List of dimensions to process
ArcSinhCols= 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 # Channels to transform. AUTO=automatically set equal to FluorCols2Use
Do_Compensation= 1 # Compensate data prior to SWIFT clustering (0|1)
AddNoiseCols=  # Channels to add noise. AUTO=no channels get added noise
PercentNoise=  # Percent per-channel noise is added.  AUTO=no noise added
FitSaturatedEvents= 0 # Include saturated events during model fitting (0|1)
FitTimeDefectEvents= 0 # Include time defects during model fitting (0|1)
MeasureSaturatedEvents= 0 # Include saturated events during cluster assignment and registraton (0|1)
MeasureTimeDefectEvents= 0 # Include time defects during cluster assignment and registraton (0|1)
nReplication= 1 # Each EM fitting is done using nReplication initializations
nConsensus= 1 # Number of EM fitting trials, from which consensus fit is derived
InitMethod= plus # Initialization method: [plus] uses kmeans++ algorithm, [rand] uses random sampling
InitialSize= Inf # Total number of events on which initial EM fitting is done
FitSampleSize= 50000 # Number of events to fit for each iterative sampling
Do_Splitting= 1 # Split multimodal clusters (0|1)
Split_Allow_PCA= 1 # Allow splitting along PCA dimensions during splitting steps (0|1)
FitBackgroundClusters= 1 # Enable splitting of background clusters (0|1)
Do_Merging= 1 # Enable Agglomerative Merging (0|1)
Merge_LDA_ModeTest= 1 # check modality along LDA dimensions during agglomerative step (0|1)
Merge_Norm_ModeTest= 1 # check modality along normal dimensions during agglomerative step (0|1)
Merge_PCA_ModeTest= 1 # check modality along PCA dimensions during agglomerative step (0|1)
Merge_Ratio_ModeTest= 0 # check modality by LDA dims standard deviation ratio during agglomerative step (0|1)
Merge_Equiv_ModeTest= 0 # check modality for LDA dims of equivalent sized random samples during agglomerative step (0|1)
Merge_Scaled_ModeTest= 0 # check modality for LDA dims of cluster-scaled sized random samples during agglomerative step (0|1)
RegisterObject= split # Cluster registration object: [merge] uses merge object, or [split] uses split object
RegisterSizeWeight= 15 # decrease[10]/increase[20] to give -/+ weight to larger clusters (relative to smaller clusters)
NDCR_Steps= 2 # Number of neighbor-dependent cluster registration steps during template registration
ICR_Steps= 0 # Number of independent cluster registration steps during template registration
NDCR_Weight= 2 # Weighting factor for neighbor-dependent cluster registration at every NDCR time step
ICR_Weight= 0 # Weighting factor for independent cluster registration at every ICR time step
RegisterSaveVid= 0 # Save video of template registration for each file (0|1)
# DEVELOPER:
SplitPeakThreshold= 0.005 # Ignore peaks smaller than the fraction of maximum peak height during splitting step
SplitKernelWidth= 1.4 # Multiplicative scaling of kernel width during splitting step
MergePeakThreshold= 0.002 # Ignore peaks smaller than the fraction of maximum peak height during merging step
MergeKernelWidth= 1.4 # Multiplicative scaling of kernel width during merging step
MinPeakCenter= -Inf # Minimum peak center along normal dimensions during splitting and merging setps
MinClustSize=  # Minimum cluster size.  AUTO=number of channels
Robust_Assign= 0 # Do 1-step rigid-fluid registration of template split centers to sample during assignment (0|1)
RegisterSigmaScale= Inf # Scale channel STDEVs of template cluster for weighted centroid fluid registration
GUI_height= 0.85 # Ratio of GUI height to vertical height of screen.  Set: GUI_height=0 to turn off GUI
GUI_delay= 3 # Delay timer for GUI to refresh and complete calculations
UpdateFreq= 0 # Number of merges to update display. Set=0 to update display for each cluster pair tested (merged or not)
Verbose= 1 # Display progress messages (0|1)
DevMode= 0 # Terminate SWIFT upon errors (0|1)
# DO NOT CHANGE:
InitState =  # random number initialization state
RunTime =  # record of run times [fitting, splitting, merging]
# End of config file. Note a carriage return may be required after the last line
